name: CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

env:
  GO_VERSION: '1.23'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  deploy:
    name: Deploy (Example)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Example deployment step - customize for your infrastructure
      # Uncomment and configure for your deployment target

      # - name: Deploy to Kubernetes
      #   run: |
      #     echo "kubectl set image deployment/go-starter app=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main"

      # - name: Deploy to Cloud Run
      #   uses: google-github-actions/deploy-cloudrun@v2
      #   with:
      #     service: go-starter
      #     image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main

      # - name: Deploy to ECS
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: task-definition.json
      #     service: go-starter
      #     cluster: production

      - name: Deployment placeholder
        run: |
          echo "Deployment step - configure for your infrastructure"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main"

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build binaries
        run: |
          # Build for multiple platforms
          GOOS=linux GOARCH=amd64 go build -o bin/app-linux-amd64 ./cmd/app
          GOOS=linux GOARCH=arm64 go build -o bin/app-linux-arm64 ./cmd/app
          GOOS=darwin GOARCH=amd64 go build -o bin/app-darwin-amd64 ./cmd/app
          GOOS=darwin GOARCH=arm64 go build -o bin/app-darwin-arm64 ./cmd/app
          GOOS=windows GOARCH=amd64 go build -o bin/app-windows-amd64.exe ./cmd/app

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: bin/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
